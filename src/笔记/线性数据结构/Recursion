链表与递归：
    leetcode：203
        /**
         * Definition for singly-linked list.
         * public class ListNode {
         *     int val;
         *     ListNode next;
         *     ListNode(int x) { val = x; }
         * }
         */
        class Solution {
            public ListNode removeElements(ListNode head, int val) {

            }
        }
    必须掌握的思想

    占用系统栈，递归规模消耗需要考虑系统栈容量

    适用于解决线性问题（广泛线性，不仅仅是线性结构）

    原理；本质上，将原来的问题，转化为更小完全同类型的问题（利用统一分解公式），直到最小，
         在解决最小可计算问题的基础上，将最小问题的结果作为最小值，一步步将之前分解问题的逐渐增大的规模问题作为与最小值可计算的结果逐渐完善
         （利用统一分解公式的原理）解决整个问题。

         所以将最基本问题的可计算性解决，然后调用逐渐增大问题规模的统一公式，将原问题解决。

    求解过程：
            1.求解的最基本的问题
                        程序员自己控制最基本问题的解决办法
            2，（核心）原问题规模逐渐转小

            写的时候一定要注意问题原本的语义（宏观语义）
            递归函数也是一个函数，完成一个功能而已
            核心：当前问题规模下以确认的值，加下一个规模问题下的输入参数规模逐渐小化即可